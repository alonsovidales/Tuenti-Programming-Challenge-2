In Las Vegas, there is a croupier who is famous because of the weird way he shuffles a deck of N cards. He splits the deck in two sets. Then, he picks one card from the top of the first set and put it down on the table to form a new pile of cards. Then he picks one card from the top of the other bunch and puts it on top of the new stack. The process goes on until one of the two original bunches is empty. Finally, the croupier puts the remaining cards on the new stack by taking them one by one from the top of the remaining stack.

Example:
Number of cards: N = 10
Number of cards in the first set: L = 3
Cards: 10 1 4 2 8 5 6 7 3 9
First set: 10 1 4
Second set: 2 8 5 6 7 3 9
Shuffled set: 4 9 1 3 10 7 6 5 8 2 

As if the process were not cumbersome enough, he just repeats it. How many times should the croupier repeat the process until the cards come to the original position, given that the croupier always splits the cards exactly in the same way? (L is constant along the whole routine).

Input
The first line of the input gives the number of test cases, C, and C test cases follow (1 ≤ C ≤ 100). Each test case consists of a line with two integers N, the number of cards in the deck, and L, the number of cards in the first set. 1 ≤ N ≤ 106 and 0 ≤ L ≤ N

Output
For each test case, output one line containing "Case #x: M", where x is the case number (starting from 1) and M is the minimum number of times that the croupier should repeat the process until the cards come to the original position.

https://contest.tuenti.net/Questions?id=13
