We want to develop a malware detector. Classic non-heuristic detectors check only if the signature of the file is contained in a definitions database; that means they are only able to detect already known and tagged malware. Our aim is to create a heuristic anti-malware system able to detect unknown threats based on their strange behavior so we can protect our users against new and undiscovered malware.

We have already developed some kernel device drivers that intercept all the system calls done by the running processes. Every system call is then logged so we know the amount of system calls, by type, for any process.
For example: for the process iexploter.exe, we have a report which is basically an array where each entry is the count for a specific system call:
25 50 1 … 44
The first value could be the number of files opened, the second value could be the number of registry entries modified, and the third could be the number of TCP ports opened, etc.
Your task is to create the engine that, given a set of report vectors of known malware and safe processes, is able to correctly detect new processes as safe or malware based on their behavior.
Input
The first line of the input gives the number of known software reports, R
The second line of the input gives the number of unknown software reports, U
The third line of the input gives the total number of different system calls intercepted by the kernel drivers, N

Then R software reports follow, with the syntax:
[S|M] V1 V2 V3 V4 V5 …. VN
(S = Safe, M =Malware and Vi is the count value for the system call i)

Finally, U software reports follow, with the syntax:
V1 V2 V3 V4 V5 …. VN
Output
The sum of all the system call values of the unknown software reports detected as malware.

https://contest.tuenti.net/Questions?id=16
